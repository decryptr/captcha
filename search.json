[{"path":"https://decryptr.github.io/captcha/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 decryptr Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://decryptr.github.io/captcha/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julio Trecenti. Maintainer, author.","code":""},{"path":"https://decryptr.github.io/captcha/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Trecenti J (2022). captcha: Solve Captchas Using Torch. https://github.com/decryptr/captcha, https://decryptr.github.io/captcha/.","code":"@Manual{,   title = {captcha: Solve Captchas Using Torch},   author = {Julio Trecenti},   year = {2022},   note = {https://github.com/decryptr/captcha, https://decryptr.github.io/captcha/}, }"},{"path":"https://decryptr.github.io/captcha/index.html","id":"captcha","dir":"","previous_headings":"","what":"Solve Captchas Using Torch","title":"Solve Captchas Using Torch","text":"package extensible API build models solve Captchas (Completely Automated Public Turing test tell Computers Humans Apart). provides tools read Captchas, visualize Captchas, annotate Captchas, fit models, share fitted models.","code":""},{"path":"https://decryptr.github.io/captcha/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Solve Captchas Using Torch","text":"One can install development version captcha package running","code":"remotes::install_github(\"decryptr/captcha\")"},{"path":"https://decryptr.github.io/captcha/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Solve Captchas Using Torch","text":"basic usage captcha involves functions read_captcha(), plot(), captcha_annotate(), captcha_load_model() decrypt(). diagram summarizes relationships functions. arrows indicate dependency functions objects generated functions.","code":""},{"path":"https://decryptr.github.io/captcha/index.html","id":"read-and-visualize","dir":"","previous_headings":"Basic usage","what":"Read and visualize","title":"Solve Captchas Using Torch","text":"read_captcha() function reads character vector image files stores memory. Behind scenes, function uses {magick} package deal types files may appear (JPEG, PNG, among others).  function returns object class captcha, can used methods. captcha object list three elements: $img, contains image read magick package; $lab, contains image label (default, NULL); $path, contains path image. read_captcha() function lab_in_path= parameter, indicates whether image path contains label. lab_in_path=TRUE, function try extract label file (getting text comes last _ path) store $lab element. plot() function method class S3 base R. function facilitates visualization Captchas. function receives list images (obtained read_captcha() function) displays Captcha visually.  interesting aspect plot() function deals list Captchas. useful goal view several Captchas image simultaneously. next image shows example.  default, plot() function arranges images four columns. change default, one can modify options using options(captcha.print.cols = N), N desired number columns. next image shows example two columns.  list Captchas long, plot() function displays maximum number images accompanied message. default, number 100, 25 rows four columns. One can override option combining captcha.print.cols= captcha.print.rows= options. next image shows example function’s behavior number images exceeds 100.  possible create subsets captcha objects using [ operator. One can also use length() function measure number images. next image shows example operations.  Finally, image label, plot() function shows label corner image. following image shows example.","code":"library(captcha) exemplo <- \"man/figures/dados_tjmg.jpeg\" captcha <- read_captcha(exemplo)  captcha #>   format width height colorspace matte filesize density #> 1   JPEG   100     50       sRGB FALSE     4530   72x72 class(captcha) #> [1] \"captcha\" str(captcha) #> Class 'captcha'  hidden list of 3 #>  $ img :Class 'magick-image' <externalptr>  #>  $ lab : NULL #>  $ path: chr \"man/figures/dados_tjmg.jpeg\" exemplo <- \"man/figures/mnist128c49c36e13_6297.png\" captcha <- read_captcha(exemplo, lab_in_path = TRUE)  str(captcha) #> Class 'captcha'  hidden list of 3 #>  $ img :Class 'magick-image' <externalptr>  #>  $ lab : chr \"6297\" #>  $ path: chr \"man/figures/mnist128c49c36e13_6297.png\" exemplo <- \"man/figures/dados_tjmg.jpeg\" captcha <- read_captcha(exemplo) plot(captcha) exemplos <- paste0(\"man/figures/\", c(   \"dados_tjmg.jpeg\",   \"dados_esaj.png\",   \"dados_rfb.png\",   \"dados_sei.png\" )) captchas <- read_captcha(exemplos) plot(captchas) options(captcha.print.cols = 2) plot(captchas) # more than 100 imagens: examples <- rep(\"man/figures/dados_tjmg.jpeg\", 110) captchas <- read_captcha(examples) plot(captchas) #> ℹ Too many images, printing first 100. To override, run #> • options('captcha.print.rows' = MAX_ROWS) #> • options('captcha.print.cols' = COLUMNS) captchas_subset <- captchas[1:20] length(captchas_subset) # 20 #> [1] 20 plot(captchas_subset) example <- \"man/figures/mnist128c49c36e13_6297.png\" captcha <- read_captcha(example, lab_in_path = TRUE) plot(captcha)"},{"path":"https://decryptr.github.io/captcha/index.html","id":"annotate","dir":"","previous_headings":"Basic usage","what":"Annotate","title":"Solve Captchas Using Torch","text":"captcha_annotate() function annotates Captcha image, either manually automatically. modifies image path adds text _label end file path. function following parameters: files=: object class captcha read function read_captcha() (recommended) character vector file paths. labels=: (optional) character vector image labels. must length() files=. value NULL default, prompting user enter label manually. path=: (optional) path folder save annotated files. default, saves files modified names folder original files. rm_old=: (optional) whether delete original files. Defaults FALSE. captcha_annotate() function returns vector paths modified files. labels= parameter can handle situations one knows Captcha label. example, workflow uses oracle might provide label automatically. label doesn’t exist, captcha_annotate() function opens prompt classification shows image using plot(). following image shows application example captcha_annotate() function RStudio.","code":""},{"path":"https://decryptr.github.io/captcha/index.html","id":"predict","dir":"","previous_headings":"Basic usage","what":"Predict","title":"Solve Captchas Using Torch","text":"decrypt() function returns label image using fitted model. function takes two arguments: file=, can either file path captcha class object, model=, contains object class luz_module_fitted, fitted using {luz} package.  fitted models several different Captchas available captcha package. possible load trained model using captcha_load_model() function. path= parameter contains either path fitted model string name released model, like \"rfb\". Fitted models stored captcha package repository releases, can downloaded using {piggyback} package package. Currently, Captchas available fitted models trf5, tjmg, trt, esaj, jucesp, tjpe, tjrs, cadesp, sei rfb. table describes models accuracy.","code":"model <- captcha_load_model(\"cadesp\") img <- \"man/figures/dados_cadesp.jpg\" captcha <- read_captcha(img) plot(captcha) decrypt(captcha, model) #> [1] \"dwyy\""},{"path":"https://decryptr.github.io/captcha/index.html","id":"fit-custom-model","dir":"","previous_headings":"Basic usage","what":"Fit custom model","title":"Solve Captchas Using Torch","text":"captcha package provides basic interface fitting custom models fully labeled data. Annotation can done manually using captcha_annotate() function presented earlier another method developed user. model uses convolutional neural network architecture, similar LeNet-5 model. modeling step assumptions file names. Images must folder pattern path//file/<id>_<lab>.<ext>, : <id>: can name, preferably without accents special characters, avoid encoding issues. usually contains name type hash identify image uniquely. Note: annotating file, id must unique, two Captchas can label. <lab>: Captcha label. string characters [-zA-Z0-9], can case-sensitive necessary. labels must length. <ext>: file extension. can .png, .jpeg .jpg. operations also work .svg format, may problems due image’s transparency. captcha_fit_model() function fits model folder annotated images. function considers parameters: dir=: path annotated files; dir_valid=: (optional) path annotated files validation; prop_valid=:, proportion training set considered validation. prop_valid= ignored dir_valid= given (default, 20% dataset considered validation). captcha_fit_model() function also parameters related neural network. : dropout=: dropout percentage applied hidden layers network (default, 0.25); dense_units=: number units hidden layer comes convolutional layers (default, 200); decay=: learning rate decay percentage (default, 0.99); epochs=: number epochs fit model (default, 100). important note model stops fitting 20 iterations without significant increment accuracy (chosen 1%; details, see advanced guide). function returns fitted model class luz_module_fitted, can saved disk using luz_save(). One can also serialize model use packages PyTorch. tutorial serialization can found torch package documentation. Fitting new Captcha model can challenging. help , captcha package documentation provides application example. example uses Captchas captcha_generate() function, generates Captchas using magick package. captcha_generate() function following parameters: write_disk=: save files disk? default, FALSE. path=: Path save files disk, previous parameter TRUE. chars=: characters use image. n_chars=: length Captcha. n_rows=: Height image, pixels. n_cols=: Width image, pixels. p_rotate=: Probability image rotation. p_line=: Probability adding line letters. p_stroke=: Probability adding border letters. p_box=: Probability adding box (rectangle) around letters. p_implode=: Probability adding implode effects. p_oilpaint=: Probability add oil paint effects. p_noise=: Probability adding white noise background image. p_lat=: Probability applying local adaptive thresholding algorithm image.","code":""},{"path":"https://decryptr.github.io/captcha/index.html","id":"advanced-usage","dir":"","previous_headings":"","what":"Advanced usage","title":"Solve Captchas Using Torch","text":"premises classified base met, possible fit neural network model using captcha package. However, training step involves many small adaptations, decided export functions two depth levels. address , captcha package also provides procedural approach fit model, using step--step described advanced guide.","code":""},{"path":"https://decryptr.github.io/captcha/reference/available_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Available models for prediction — available_models","title":"Available models for prediction — available_models","text":"Available models prediction using decrypt().","code":""},{"path":"https://decryptr.github.io/captcha/reference/available_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available models for prediction — available_models","text":"","code":"available_models()"},{"path":"https://decryptr.github.io/captcha/reference/available_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Available models for prediction — available_models","text":"Currently, available captchas : trf5: Tribunal Regional Federal 5 tjmg: Tribunal de Justiça de Minas Gerais trt: Tribunal Regional Trabalho 3 esaj: Tribunal de Justiça da Bahia jucesp: Junta Comercial de São Paulo tjpe: Tribunal de Justiça de Pernambuco tjrs: Tribunal de Justiça Rio Grande Sul cadesp: Centro de Apoio ao Desenvolvimento da Saúde Pública sei: Sistema Eletrônico de Informações - rfb: Receita Federal","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Captcha accuracy metric — captcha_accuracy","title":"Captcha accuracy metric — captcha_accuracy","text":"Captcha accuracy metric","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Captcha accuracy metric — captcha_accuracy","text":"","code":"captcha_accuracy()"},{"path":"https://decryptr.github.io/captcha/reference/captcha_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate captchas with their labels — captcha_annotate","title":"Annotate captchas with their labels — captcha_annotate","text":"Given one Captchas, function prompts solve mannually later can train model labels. Annotated captchas saved path labels filename separated underscore.","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate captchas with their labels — captcha_annotate","text":"","code":"captcha_annotate(files, labels = NULL, path = NULL, rm_old = FALSE)"},{"path":"https://decryptr.github.io/captcha/reference/captcha_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate captchas with their labels — captcha_annotate","text":"files Either object class captcha character vector paths captcha files labels Either NULL (interactive classification) character vector labels Captchas path save annotated captcha files. NULL, saves files folder unanswered counterparts. rm_old Whether delete unanswered captchas copying renaming ","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate captchas with their labels — captcha_annotate","text":"character vector paths newly created files","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Captcha datasets — captcha_dataset","title":"Captcha datasets — captcha_dataset","text":"Captcha datasets","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Captcha datasets — captcha_dataset","text":"","code":"captcha_dataset(   root,   transform_image = captcha::captcha_transform_image,   transform_label = captcha::captcha_transform_label,   augmentation = NULL )"},{"path":"https://decryptr.github.io/captcha/reference/captcha_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Captcha datasets — captcha_dataset","text":"root (string): root directory files stored transform_image (callable, optional): function/transform takes file path returns torch tensor prepared feed model. transform_label (callable, optional): function/transform takes file paths transform . augmentation (function, optional) NULL, applies function augment data randomized preprocessing layers.","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_fit_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Captcha model — captcha_fit_model","title":"Fit Captcha model — captcha_fit_model","text":"Fit Captcha model","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_fit_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Captcha model — captcha_fit_model","text":"","code":"captcha_fit_model(   dir,   dir_valid = NULL,   prop_valid = 0.2,   dropout = 0.25,   dense_units = 200,   decay = 0.99,   batch_size = 40,   epochs = 100 )"},{"path":"https://decryptr.github.io/captcha/reference/captcha_fit_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Captcha model — captcha_fit_model","text":"dir directory classified images dir_valid (optional) directory validation files prop_valid proportion total images considered validation. Default 0.2. dropout dropout hyperparameter. Default 0.25. dense_units number dense units use convolution steps. Default 200. decay Weight decay applied epoch. batch_size Minibatch size. Default 40. epochs Number epochs use. Default 100. model uses early stopping, possible procedure ends total number epochs actually run.","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_fit_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Captcha model — captcha_fit_model","text":"fitted model class luz_module_fitted","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate captcha — captcha_generate","title":"Generate captcha — captcha_generate","text":"Generates random captcha image","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate captcha — captcha_generate","text":"","code":"captcha_generate(   write_disk = FALSE,   path = getwd(),   chars = c(0:9, letters, LETTERS),   n_chars = 4,   n_rows = 60,   n_cols = 120,   p_rotate = 0.8,   p_line = 0.8,   p_stroke = 0.3,   p_box = 0.3,   p_implode = 0.2,   p_oilpaint = 0,   p_noise = 0.4,   p_lat = 0 )"},{"path":"https://decryptr.github.io/captcha/reference/captcha_generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate captcha — captcha_generate","text":"write_disk write image disk? Defaults FALSE. path path save images. Defaults current directory. chars chars generate. Defaults upper/lower case letters numbers n_chars captcha length. Defaults 4. n_rows, n_cols image dimensions. Defaults 60x120 image. p_rotate probability add rotation. Defaults 80%. p_line probability add strikethrough line. Defaults 80%. p_stroke probability add stroke color. Defaults 30%. p_box probability add bounding box text. Defaults 30%. p_implode probability add imploding effect. Defaults 20%. p_oilpaint probability add oilpaint effect. Defaults 0. p_noise probability add random noise image. Defaults 40%. p_lat probability add LAT algorithm image. Defaults 0.","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_generate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate captcha — captcha_generate","text":"list containing two elements: imagemagick object captcha value.","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_generate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate captcha — captcha_generate","text":"","code":"captcha_generate() #> # A tibble: 1 × 7 #>   format width height colorspace matte filesize density #>   <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>   #> 1 PNG      120     60 sRGB       FALSE        0 72x72   captcha_generate(n_chars = 5) #> # A tibble: 1 × 7 #>   format width height colorspace matte filesize density #>   <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>   #> 1 PNG      120     60 sRGB       FALSE        0 72x72"},{"path":"https://decryptr.github.io/captcha/reference/captcha_load_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load captcha model — captcha_load_model","title":"Load captcha model — captcha_load_model","text":"Load captcha model","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_load_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load captcha model — captcha_load_model","text":"","code":"captcha_load_model(captcha, repo = \"decryptr/captcha\", tag = \"captcha_model\")"},{"path":"https://decryptr.github.io/captcha/reference/captcha_load_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load captcha model — captcha_load_model","text":"captcha file name captcha name repo repo form \"<user>/<captcha>\". Default \"decryptr/captcha\" tag tag name release load file.","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_transform_image.html","id":null,"dir":"Reference","previous_headings":"","what":"File to torch tensor — captcha_transform_image","title":"File to torch tensor — captcha_transform_image","text":"File torch tensor","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_transform_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File to torch tensor — captcha_transform_image","text":"","code":"captcha_transform_image(x, input_dim = c(32L, 192L))"},{"path":"https://decryptr.github.io/captcha/reference/captcha_transform_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File to torch tensor — captcha_transform_image","text":"x file path input_dim resize image dimension","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_transform_label.html","id":null,"dir":"Reference","previous_headings":"","what":"File to response matrix (tensor) — captcha_transform_label","title":"File to response matrix (tensor) — captcha_transform_label","text":"File response matrix (tensor)","code":""},{"path":"https://decryptr.github.io/captcha/reference/captcha_transform_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File to response matrix (tensor) — captcha_transform_label","text":"","code":"captcha_transform_label(all_letters, vocab)"},{"path":"https://decryptr.github.io/captcha/reference/captcha_transform_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File to response matrix (tensor) — captcha_transform_label","text":"all_letters list tokens files vocab unique tokens","code":""},{"path":"https://decryptr.github.io/captcha/reference/decrypt.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to solve Captchas — decrypt","title":"Function to solve Captchas — decrypt","text":"Function solve Captchas","code":""},{"path":"https://decryptr.github.io/captcha/reference/decrypt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to solve Captchas — decrypt","text":"","code":"decrypt(files, model)"},{"path":"https://decryptr.github.io/captcha/reference/decrypt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to solve Captchas — decrypt","text":"files files read. Can character vector object class captcha. model model class luz_module_fitted","code":""},{"path":"https://decryptr.github.io/captcha/reference/net_captcha.html","id":null,"dir":"Reference","previous_headings":"","what":"Net captcha — net_captcha","title":"Net captcha — net_captcha","text":"Net captcha","code":""},{"path":"https://decryptr.github.io/captcha/reference/net_captcha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Net captcha — net_captcha","text":"","code":"net_captcha(   input_dim,   output_ndigits,   output_vocab_size,   vocab,   transform,   dropout = c(0.25, 0.25),   dense_units = 400 )"},{"path":"https://decryptr.github.io/captcha/reference/net_captcha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Net captcha — net_captcha","text":"input_dim (integer, integer): image input dimensions. output_ndigits number tokens Captcha. output_vocab_size number unique token values. vocab token labels transform input transform function (prediction purposes) dropout (float, float) AlexNet dropout values. dense_units Number dense units","code":""},{"path":"https://decryptr.github.io/captcha/reference/new_captcha.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new project to solve a custom captcha — new_captcha","title":"Create a new project to solve a custom captcha — new_captcha","text":"Create new project solve custom captcha","code":""},{"path":"https://decryptr.github.io/captcha/reference/new_captcha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new project to solve a custom captcha — new_captcha","text":"","code":"new_captcha(path)"},{"path":"https://decryptr.github.io/captcha/reference/new_captcha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new project to solve a custom captcha — new_captcha","text":"path path. exists, used. exist, created, provided parent path exists.","code":""},{"path":"https://decryptr.github.io/captcha/reference/plot.captcha.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a captcha — plot.captcha","title":"Plot a captcha — plot.captcha","text":"Plot captcha","code":""},{"path":"https://decryptr.github.io/captcha/reference/plot.captcha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a captcha — plot.captcha","text":"","code":"# S3 method for captcha plot(x, y, ...)"},{"path":"https://decryptr.github.io/captcha/reference/plot.captcha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a captcha — plot.captcha","text":"x Captcha object read read_captcha() y used ... arguments passed graphics::plot()","code":""},{"path":"https://decryptr.github.io/captcha/reference/print.captcha.html","id":null,"dir":"Reference","previous_headings":"","what":"Print information about a captcha — print.captcha","title":"Print information about a captcha — print.captcha","text":"Print information captcha","code":""},{"path":"https://decryptr.github.io/captcha/reference/print.captcha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print information about a captcha — print.captcha","text":"","code":"# S3 method for captcha print(x, ...)"},{"path":"https://decryptr.github.io/captcha/reference/print.captcha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print information about a captcha — print.captcha","text":"x Captcha object read read_captcha() ...","code":""},{"path":"https://decryptr.github.io/captcha/reference/read_captcha.html","id":null,"dir":"Reference","previous_headings":"","what":"Read captcha files — read_captcha","title":"Read captcha files — read_captcha","text":"Given paths one files, reads converts captcha list can used modeling prediction. lab_in_path = TRUE, take label Captchas filenames get ready modeling.","code":""},{"path":"https://decryptr.github.io/captcha/reference/read_captcha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read captcha files — read_captcha","text":"","code":"read_captcha(files, lab_in_path = FALSE)"},{"path":"https://decryptr.github.io/captcha/reference/read_captcha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read captcha files — read_captcha","text":"files Paths one captcha images lab_in_path Whether labels captchas already paths files (separated underscore filename)","code":""},{"path":"https://decryptr.github.io/captcha/reference/read_captcha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read captcha files — read_captcha","text":"list captcha objects","code":""}]
